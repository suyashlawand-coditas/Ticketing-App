@model Ticket

<div class="container">
    <div class="row mt-4">
        <div class="col-8 border-right h-100">
            <div>
                <h3>@Model.Title</h3>
                <p class="text-muted">
                    @Model.Description
                </p>
            </div>
            <div class="border-bottom">
                <h5>Screenshot</h5>
                @if (String.IsNullOrEmpty(Model.FilePath))
                {
                    <div class="alert alert-warning alert-dismissible fade show" role="alert">
                        <strong>No Screenshot!</strong>
                        There is no screenshot assigned to this ticket.
                    </div>
                }
                else
                {
                    <div class="bg-dark p-3 d-flex justify-content-center rounded border-4 border border-warning">
                        <img height="400" width="300" class="bg-dark img-fluid mb-2" src="~/TicketScreenshots/@Model.FilePath" />
                    </div>
                }
            </div>
            <div class="mt-3">
                <h5>More Details</h5>
                <table class="table table-bordered table-hover mt-3 rounded-lg">
                    <tbody>
                        <tr>
                            <th scope="row">Department</th>
                            <td>@Model.Department.Name</td>
                        </tr>
                        <tr>
                            <th scope="row">Ticket Raised By</th>
                            <td>@Model.RaisedBy.FullName</td>
                        </tr>
                        <tr>
                            <th scope="row">Ticket Assigned To</th>
                            <td>@Model.TicketAssignment!.AssignedUser.FullName</td>
                        </tr>
                        <tr>
                            <th scope="row">Ticket Status</th>
                            @if (ViewBag.User.UserId != Model.TicketAssignment.AssignedUserId)
                            {
                                <td><span class="badge badge-pill badge-info">@Model.TicketStatus</span></td>
                            }
                            else
                            {
                                <td>
                                    <div class="d-flex justify-content-between align-items-centre">
                                        <span>@Model.TicketStatus</span>
                                        <!-- Button trigger modal -->
                                        <button type="button" class="btn btn-sm btn-dark" data-toggle="modal" data-target="#updateTicketStatusModal">
                                            Update Ticket
                                        </button>

                                        <!-- Modal -->
                                        <div class="modal fade" id="updateTicketStatusModal" tabindex="-1" aria-labelledby="updateTicketStatusModalLabel" aria-hidden="true">
                                            <form action="/Admin/TicketManagement/AssignedTickets/UpdateTicketStatus/@Model.TicketId" method="post">
                                                <div class="modal-dialog">
                                                    <div class="modal-content">
                                                        <div class="modal-header">
                                                            <h5 class="modal-title" id="updateTicketStatusModal">Modal title</h5>
                                                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                                                <span aria-hidden="true">&times;</span>
                                                            </button>
                                                        </div>
                                                        <div class="modal-body">
                                                            <select name="ticketStatus" class="form-control">
                                                                <option value="@TicketStatus.Open">Open</option>
                                                                <option value="@TicketStatus.OnGoing">Ongoing</option>
                                                                <option value="@TicketStatus.Completed">Completed</option>
                                                            </select>

                                                        </div>
                                                        <div class="modal-footer">
                                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                                            <button type="submit" class="btn btn-primary">Save changes</button>
                                                        </div>
                                                    </div>
                                                </div>
                                            </form>
                                        </div>
                                    </div>
                                </td>
                            }
                        </tr>
                        <tr>
                            <th scope="row">Ticket Priority</th>
                            <td><span class="badge badge-pill badge-warning">@Model.Priority</span></td>
                        </tr>
                        <tr>
                            <th scope="row">Ticket Due Date</th>
                            <td>@Model.DueDate.ToLongDateString()</td>
                        </tr>
                        <tr>
                            <th scope="row">Ticket Created Date</th>
                            <td>@Model.CreatedAt.ToLongDateString()</td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
        <div class="col-4">
            <div class="d-flex justify-content-between align-items-center mt-4">
                <h5>Ticket Responses</h5>
                <button type="button" class="btn btn-sm btn-dark" data-toggle="modal" data-target="#responseModal">
                    Give Response
                </button>
                <!-- #region Modal -->
                <div class="modal fade" id="responseModal" tabindex="-1" aria-labelledby="responseModalLabel" aria-hidden="true">
                    <form action="/Ticket/AddResponse/@Model.TicketId" method="post">
                        <div class="modal-dialog">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="responseModalLabel">Add a Response</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div class="modal-body">
                                    <textarea name="ticketResponse" placeholder="Write your response here..." class="form-control" required></textarea>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                                    <button type="submit" class="btn btn-primary">Add Response</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
                <!-- #endregion -->
            </div>
            <hr />
            <!-- #region Ticket Responses -->
            <div>
                <ul id="ticket-response-chat-list" class="list-group rounded">
                    @foreach (TicketResponse ticketResponse in ViewBag.TicketResponses)
                    {
                        <li class="list-group-item d-flex justify-content-between" id="@ticketResponse.TicketResponseId">
                                <div>
                                    <strong>@ticketResponse.ResponseUser.FullName</strong>
                                    <div style="background-color: #D3D3D3;" class="rounded px-2 py-1 my-1">@ticketResponse.ResponseMessage</div>
                                </div>
                            @if (ticketResponse.ResponseUserId == ViewBag.User.UserId)
                            {
                                <div>
                                    <small>
                                        <a href="/Ticket/DeleteResponse/@ticketResponse.TicketResponseId" class="btn btn-danger btn-sm ml-1">
                                            Del
                                        </a>
                                    </small>
                                </div>
                            }
                        </li>
                    }
                </ul>
            </div>
            <!-- #endregion -->
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/8.0.0/signalr.js" integrity="sha512-pn4yorWMbHHvdsldBpkTNjJaoadsoYs/ZgOYHSHUtivn1j/Ddgdnlgt1egjQcP8j4atM3TR+tgIqgjhi5Z11KQ==" crossorigin="anonymous" referrerpolicy="no-referrer"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/ticket-response")
        .build();

    connection.on("TicketResponseMessage", (message) => {
        let newResponse = JSON.parse(message);
        console.log(newResponse);

        let ticketResponseChatList = document.getElementById('ticket-response-chat-list');
        let newItem = document.createElement('li');
        
        newItem.id = newResponse.TicketResponseId;
        newItem.className = 'list-group-item d-flex justify-content-between';
        newItem.innerHTML = `<div><strong>${newResponse.UserName}</strong><div style="background-color: #D3D3D3;" class="rounded px-2 py-1 my-1">${newResponse.ResponseMessage}</div></div>`;

        ticketResponseChatList.appendChild(newItem);
    });

    connection.on("DeleteTicketResponse", (id) => {
        console.log("DeleteTicketResponse", id);

        let ticketResponseChatList = document.getElementById('ticket-response-chat-list');
        ticketResponseChatList.childNodes.forEach(
            element => {
                if (element.id == id){
                    ticketResponseChatList.removeChild(element);
                }
            }
        )

    });

    connection.start().then(async () => {
        console.log("Connected to SignalR!");
        connection.invoke('JoinGroup', location.href.split('/')[location.href.split('/').length - 1])
            .then(() => console.log("Connected to group"))
            .catch((error) => {
                console.log("ERROR", error)
            } )
    }).catch(err => console.error(err.toString()));

</script>